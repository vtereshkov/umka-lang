import "fnc.um"

type Person = struct {
	name: str
	age: int
	sex: str
}

fn by_name_eq(n: str): fn (person: any): any {
	printf("running by_name_eq with name : %s\n", n)
	return fn (person: any): any |n| {
		printf("running by_name_eq with name : %v and person : %v\n", n, Person(person))
		return Person(person).name == n
	}
}

fn test*() {
	named_foo := by_name_eq("Foo")

	persons := []Person{
		{"Foo", 24, "M"},
		{"Bar", 23, "M"},
		{"FooBar", 23, "F"}}

	mapped := fnc.Array(persons).transform(named_foo)
	printf("%v\n", mapped)
}

fn main() {
	test()
}
