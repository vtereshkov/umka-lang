import (
    "print.um"
    "binfileio.um"
    "dynarrays.um"
    "dynarrays2.um"
    "strings.um"
    "fibers.um"
    "fnctools.um"
    "gc.um"
    "gc2.um"
    "interfaces.um"
    "interfaces2.um"
    "interfaces3.um"
    "maps.um"
    "maps2.um"
    "modulespaces.um"
    "multret.um"
    "tour.um"
    "typeeq.um"
    "constfold.um"
    "itemptr.um"
    "safecast.um"
    "nonlocal.um"
    "weakptr.um"
    "byteconv.um"
    "utf8test.um"
    "utf8test2.um"
    "imports.um"
    "imports2.um"
    "imports3.um"
    "closures.um"
    "closures2.um"
    "closures3.um"
    "nullstr.um"
    "vararg.um"
    "defparam.um"
    "datetime.um"
    "untypedlit.um"
    "ternary.um"
    "typeswitch.um"
)

fn main() {
    printf("\n\n>>> Printing\n\n");                 print.test()
    printf("\n\n>>> Binary file I/O\n\n");          binfileio.test()
    printf("\n\n>>> Dynamic arrays - 1\n\n");       dynarrays.test()
    printf("\n\n>>> Dynamic arrays - 2\n\n");       dynarrays2.test()
    printf("\n\n>>> Strings\n\n");                  strings.test()
    printf("\n\n>>> Fibers\n\n");                   fibers.test()
    printf("\n\n>>> Functional tools\n\n");         fnctools.test()
    printf("\n\n>>> Garbage collection - 1\n\n");   gc.test()
    printf("\n\n>>> Garbage collection - 2\n\n");   gc2.test()
    printf("\n\n>>> Interfaces - 1\n\n");           interfaces.test()
    printf("\n\n>>> Interfaces - 2\n\n");           interfaces2.test()
    printf("\n\n>>> Interfaces - 3\n\n");           interfaces3.test()
    printf("\n\n>>> Maps - 1\n\n");                 maps.test()
    printf("\n\n>>> Maps - 2\n\n");                 maps2.test()    
    printf("\n\n>>> Module spaces\n\n");            modulespaces.test()
    printf("\n\n>>> Multiple returns\n\n");         multret.test()
    printf("\n\n>>> Language tour\n\n");            tour.test()
    printf("\n\n>>> Type equivalence\n\n");         typeeq.test()
    printf("\n\n>>> Constant folding\n\n");         constfold.test()
    printf("\n\n>>> Item pointers\n\n");            itemptr.test()
    printf("\n\n>>> Safe type casts\n\n");          safecast.test()
    printf("\n\n>>> Non-local scope\n\n");          nonlocal.test()
    printf("\n\n>>> Weak pointers\n\n");            weakptr.test()
    printf("\n\n>>> Byte conversions\n\n");         byteconv.test()
    printf("\n\n>>> UTF-8 - 1\n\n");                utf8test.test()
    printf("\n\n>>> UTF-8 - 2\n\n");                utf8test2.test()
    printf("\n\n>>> Import disambiguation - 1\n\n");imports.test()
    printf("\n\n>>> Import disambiguation - 2\n\n");imports2.test()
    printf("\n\n>>> Import disambiguation - 3\n\n");imports3.test()
    printf("\n\n>>> Closures - 1\n\n");             closures.test()
    printf("\n\n>>> Closures - 2\n\n");             closures2.test()
    printf("\n\n>>> Closures - 3\n\n");             closures3.test()
    printf("\n\n>>> Null strings\n\n");             nullstr.test()
    printf("\n\n>>> Variadic functions\n\n");       vararg.test()
    printf("\n\n>>> Default parameters\n\n");       defparam.test()
    printf("\n\n>>> Date/time\n\n");                datetime.test()
    printf("\n\n>>> Untyped literals\n\n");         untypedlit.test()
    printf("\n\n>>> Ternary operator\n\n");         ternary.test()
    printf("\n\n>>> Type switches\n\n");            typeswitch.test()
}
